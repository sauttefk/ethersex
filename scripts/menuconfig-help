#!/bin/bash

export MCU=atmega8
depth=0
tmp=`mktemp mc1XXXXXX`
tmp2=`mktemp mc2XXXXXX`

function _bool() {
  eval "$2=y"
} 

function bool() {
  _bool "$1" "$2"
  echo "$(space)Option $2 ($1)"
}
function space() {
  i=0
  while [ $i -lt $depth ]; do
    echo -n '   ';
    let i=$i+1
  done
}

function int() { echo "$(space)Integer $2 ($1)"; }
function editor() { echo "$(space)Editor $2 ($1)"; }
function hex() { echo "$(space)Hex $2 ($1)"; }
function string() { echo "$(space)String $2 ($1)"; }
function ipv4() { echo "$(space)Ipv4 $2 ($1)"; }
function ipv6() { echo "$(space)Ipv6 $2 ($1)"; }
function ip() { echo "$(space)Ip $2 ($1)"; }
function choice() { echo "$(space)Choice $1"; }
function mac() { echo "$(space)Mac $2 ($1)"; }

function dep_bool() { bool "$1" "$2"; }

function dep_bool_menu() { dep_bool "$1" "$2"; menu "$1";}
function dep_bool_editor() { editor "$1" "$2"; }

# ignore most of the other, mostly mentioned to not cause
# obscure stderr output ...
function define_bool() { true; }
function script_set() { true; }
function define_int() { true; }
function define_hex() { true; }
function define_string() { true; }
function define_symbol() { true; }
function endmenu() { 
  let depth=$depth-1;
  if [ $depth -lt 0 ]; then
    depth=0;
  fi
  head -n $(( $( wc -l $tmp | sed 's/ .*//' ) -1 )) $tmp > $tmp2
  cp $tmp2 $tmp


}
function comment() { if [ $next_comment -gt 0 ]; then menu "$1"; fi; next_comment=0; }
function mainmenu_option() { if [ "$1"="next_comment" ]; then next_comment=1; fi;}
function mainmenu_name() { true; }
function menu() {
  echo
  space
  sed 's/$/ -> /' < $tmp |tr -d "\n"
  echo $1
  echo $1 >> $tmp
  let depth=$depth+1
}

source config.in

rm $tmp $tmp2
